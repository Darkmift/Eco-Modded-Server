// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated from RubbleTemplate.tt/>

namespace Eco.Mods.TechTree
{
    using Eco.Shared.Serialization;
    using Eco.Gameplay.Objects;
    using Eco.World;
    using Eco.World.Blocks;
    using Eco.Core.Items;

    [BecomesRubble(typeof(LimestoneRubbleSet1Chunk1Object), typeof(LimestoneRubbleSet1Chunk2Object), typeof(LimestoneRubbleSet1Chunk3Object))]
    [BecomesRubble(typeof(LimestoneRubbleSet2Chunk1Object), typeof(LimestoneRubbleSet2Chunk2Object), typeof(LimestoneRubbleSet2Chunk3Object), typeof(LimestoneRubbleSet2Chunk4Object))]
    [BecomesRubble(typeof(LimestoneRubbleSet3Chunk1Object), typeof(LimestoneRubbleSet3Chunk2Object), typeof(LimestoneRubbleSet3Chunk3Object))]
    [BecomesRubble(typeof(LimestoneRubbleSet4Chunk1Object), typeof(LimestoneRubbleSet4Chunk2Object), typeof(LimestoneRubbleSet4Chunk3Object))]
    [Tag("Minable")]
    public partial class LimestoneBlock : Block { }

    [Serialized, Tag("FastPickupable")] public partial class LimestoneRubbleSet1Chunk1Object : RubbleObject<LimestoneItem> { }
    [Serialized, Tag("FastPickupable")] public partial class LimestoneRubbleSet1Chunk2Object : RubbleObject<LimestoneItem> { }

    [BecomesRubble(typeof(LimestoneRubbleSet1Chunk3Split1Object), typeof(LimestoneRubbleSet1Chunk3Split2Object)), Tag("MinableRubble")]
    [Serialized] public partial class LimestoneRubbleSet1Chunk3Object : RubbleObject<LimestoneItem> { }
    [Serialized, Tag("FastPickupable"), Tag("Pickupable")] public partial class LimestoneRubbleSet1Chunk3Split1Object : RubbleObject<LimestoneItem> { }
    [Serialized, Tag("FastPickupable"), Tag("Pickupable")] public partial class LimestoneRubbleSet1Chunk3Split2Object : RubbleObject<LimestoneItem> { }

    [Serialized, Tag("FastPickupable"), Tag("Pickupable")] public partial class LimestoneRubbleSet2Chunk1Object : RubbleObject<LimestoneItem> { }
    [Serialized, Tag("FastPickupable"), Tag("Pickupable")] public partial class LimestoneRubbleSet2Chunk2Object : RubbleObject<LimestoneItem> { }
    [Serialized, Tag("FastPickupable"), Tag("Pickupable")] public partial class LimestoneRubbleSet2Chunk3Object : RubbleObject<LimestoneItem> { }
    [Serialized, Tag("FastPickupable"), Tag("Pickupable")] public partial class LimestoneRubbleSet2Chunk4Object : RubbleObject<LimestoneItem> { }

    [Serialized, Tag("FastPickupable"), Tag("Pickupable")] public partial class LimestoneRubbleSet3Chunk1Object : RubbleObject<LimestoneItem> { }
    [Serialized, Tag("FastPickupable"), Tag("Pickupable")] public partial class LimestoneRubbleSet3Chunk2Object : RubbleObject<LimestoneItem> { }
    [BecomesRubble(typeof(LimestoneRubbleSet3Chunk3Split1Object), typeof(LimestoneRubbleSet3Chunk3Split2Object))]
    [Serialized, Tag("MinableRubble")]    public partial class LimestoneRubbleSet3Chunk3Object : RubbleObject<LimestoneItem> { }
    [Serialized, Tag("FastPickupable"), Tag("Pickupable")] public partial class LimestoneRubbleSet3Chunk3Split1Object : RubbleObject<LimestoneItem> { }
    [Serialized, Tag("FastPickupable"), Tag("Pickupable")] public partial class LimestoneRubbleSet3Chunk3Split2Object : RubbleObject<LimestoneItem> { }

    [BecomesRubble(typeof(LimestoneRubbleSet4Chunk1Split1Object), typeof(LimestoneRubbleSet4Chunk1Split2Object))]
    [Serialized, Tag("MinableRubble")]    public partial class LimestoneRubbleSet4Chunk1Object : RubbleObject<LimestoneItem> { }
    [Serialized, Tag("FastPickupable"), Tag("Pickupable")] public partial class LimestoneRubbleSet4Chunk1Split1Object : RubbleObject<LimestoneItem> { }
    [Serialized, Tag("FastPickupable"), Tag("Pickupable")] public partial class LimestoneRubbleSet4Chunk1Split2Object : RubbleObject<LimestoneItem> { }
    [Serialized, Tag("FastPickupable"), Tag("Pickupable")] public partial class LimestoneRubbleSet4Chunk2Object : RubbleObject<LimestoneItem> { }
    [Serialized, Tag("FastPickupable"), Tag("Pickupable")] public partial class LimestoneRubbleSet4Chunk3Object : RubbleObject<LimestoneItem> { }
}
